: initial device setup
set cpu 11/40
set tto 7b
set tm0 locked
attach tm0 dist.tap
attach rk0 rk0
attach rk1 rk1
attach rk2 rk2
dep system sr 173030
: boot
expect "@" send "rkunix\r"; continue
: clean up stty, check some things
expect '#' send 'stty -lcase; date ; ls -l\r\n'; continue
: make the mkconf program
expect '#' send 'chdir /usr/sys/conf; cc mkconf.c; mv a.out mkconf; pwd\r'; continue
expect '#' send 'ls -lastr\r'; continue
: tr trickery YUCK to send multiple lines into the mkconf program which adds devices to the kernel
expect '#' send 'echo \'rkXtmXtcX8dcXlpXdone\' | tr X \\\\012 | mkconf\r'; continue
expect '#' send 'ls -lastr\r'; continue
: lets make a new kernel
expect '#' send 'as m40.s; mv a.out m40.o; cc -c c.c; as l.s; ld -x a.out m40.o c.o ../lib1 ../lib2; mv a.out /unix; ls -l /*ix \r' ; continue
: make the matching device files
expect '#' send 'ls -l /dev \r'; continue
expect '#' send '/etc/mknod /dev/rk0 b 0 0; /etc/mknod /dev/rk1 b 0 1; /etc/mknod /dev/rk2 b 0 2\r' ; continue
expect '#' send '/etc/mknod /dev/mt0 b 3 0; /etc/mknod /dev/rmt0 c 12 0; /etc/mknod /dev/tap0 b 4 0\r' ; continue
expect '#' send '/etc/mknod /dev/rrk0 c 9 0; /etc/mknod /dev/rrk1 c 9 1; /etc/mknod /dev/rrk2 c 9 2\r' ; continue
expect '#' send '/etc/mknod /dev/lp0 c 2 0\r' ; continue
expect '#' send '/etc/mknod /dev/tty0 c 3 0; /etc/mknod /dev/tty1 c 3 1; /etc/mknod /dev/tty2 c 3 2; /etc/mknod /dev/tty3 c 3 3\r' ; continue
expect '#' send '/etc/mknod /dev/tty4 c 3 4; /etc/mknod /dev/tty5 c 3 5; /etc/mknod /dev/tty6 c 3 6; /etc/mknod /dev/tty7 c 3 7\r' ; continue
expect '#' send 'chmod 640 /dev/*rk*; chmod 640 /dev/*mt*; chmod 640 /dev/*tap*\r' ; continue
: restore the rest of the OS from tape into the disk partitions
expect '#' send 'dd if=/dev/mt0 of=/dev/rk1 count=4000 skip=4100\r' ; continue
expect '#' send '/etc/mount /dev/rk1 /usr/source\r' ; continue
expect '#' send 'dd if=/dev/mt0 of=/dev/rk2 count=4000 skip=8100\r' ; continue
: make the mount points
expect '#' send 'mkdir /usr/source ; mkdir /usr/doc\r' ; continue
: mount the filesystems
expect '#' send 'echo /etc/mount /dev/rk1 /usr/source\r' ; continue
expect '#' send 'echo /etc/mount /dev/rk2 /usr/doc\r' ; continue
: make sure they filesystems get mounted at next boot
expect '#' send 'cat /etc/rc\r' ; continue
expect '#' send 'echo /etc/mount /dev/rk1 /usr/source >> /etc/rc\r' ; continue
expect '#' send 'echo /etc/mount /dev/rk2 /usr/doc >> /etc/rc\r' ; continue
: a little late but check the filesystems - should probably do this before the mount
expect '#' send 'icheck /dev/rrk0 ; dcheck /dev/rrk0\r' ; continue
expect '#' send 'icheck /dev/rrk1 ; dcheck /dev/rrk1\r' ; continue
expect '#' send 'icheck /dev/rrk2 ; dcheck /dev/rrk2\r' ; continue
: edit df source code to add rk disks and compile
: more tr trickery - YUCK
expect '#' send 'chdir /usr/source/s1 ; echo \'/rp0/dX.-2aX  "/dev/rk0",X  "/dev/rk1",X.XwXqX\' | tr X \\\\012 | ed df.c\r' ; continue
expect '#' send 'cc -s -O df.c ; cp a.out /bin/df ; rm a.out\r' ; continue
: more tr trickery to ativate the ttys - changing the initial 0 to a 1 for the tty entries 0-7
expect '#' send 'echo \'1,8s/^0/1/pXwXqX\' | tr X \\\\012 | ed /etc/ttys\r' ; continue
: reboot time - no reboot command - three times is the tradition!! respect the tradition
expect '#' send 'sync; sleep 1; sync; sleep 1; sync\r' ; continue
expect '#' send 'echo you can now halt this simulation (^E, q) and reboot using the normalboot.ini file\r' ; continue
: kick it all off
boot rk0
